{
  "api": {
    "name": "RestInformationPlugin",
    "slug": "restinformationplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "scan",
        "signature": "(scanCall: IScanCall) => Promise<object>",
        "parameters": [
          {
            "name": "scanCall",
            "docs": "",
            "type": "IScanCall"
          }
        ],
        "returns": "Promise<object>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "IScanCall"
        ],
        "slug": "scan"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "IScanCall",
      "slug": "iscancall",
      "docs": "The configuration object for the plugin. IRequest is mandatory because it configures needed\nthings like the url, settings can be left empty, which will use the default settings.",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "request",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "IRequest"
          ],
          "type": "IRequest"
        },
        {
          "name": "settings",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "ISettings"
          ],
          "type": "ISettings"
        }
      ]
    },
    {
      "name": "IRequest",
      "slug": "irequest",
      "docs": "Data used for the http request. Url, headers and body are required, though both header\nand body can be an empty object. base64Key and imageTypeKey configure how the image and the\nimage type will be named when they are added to the body.",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "headers",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "Record"
          ],
          "type": "Record<string, string>"
        },
        {
          "name": "body",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "Record"
          ],
          "type": "Record<string, any>"
        },
        {
          "name": "base64Key",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "imageTypeKey",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "ISettings",
      "slug": "isettings",
      "docs": "All settings that can be passed to the plugin. The `detectorSize` value must be between\n`0` and `1`, because it determines how many percent of the screen should be covered by\nthe detector.\nIf the value is greater than 1 the detector will not be visible on the screen.",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "beepOnSuccess",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "vibrateOnSuccess",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "detectorSize",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "detectorAspectRatio",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "drawFocusRect",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "focusRectColor",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "focusRectBorderRadius",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "focusRectBorderThickness",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "drawFocusLine",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "focusLineColor",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "focusLineThickness",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "drawFocusBackground",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "focusBackgroundColor",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "loadingCircleColor",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "loadingCircleSize",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "imageWidth",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "imageHeight",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number | undefined"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [
    {
      "name": "Record",
      "slug": "record",
      "docs": "Construct a type with a set of properties K of type T",
      "types": [
        {
          "text": "{\r\n    [P in K]: T;\r\n}",
          "complexTypes": [
            "K",
            "T"
          ]
        }
      ]
    }
  ],
  "pluginConfigs": []
}